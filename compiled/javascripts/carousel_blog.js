// Generated by CoffeeScript 1.7.1
(function() {
  var CarouselBlog,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  CarouselBlog = (function() {
    function CarouselBlog() {
      this.resize_articles = __bind(this.resize_articles, this);
      this.init_article_keyframes = __bind(this.init_article_keyframes, this);
    }

    CarouselBlog.prototype.initialize = function() {
      var init_region;
      init_region = $("article.region").eq(0);
      this.init_article_keyframes();
      this.resize_articles();
      $("article.region").click((function(_this) {
        return function(e) {
          var $elm;
          $elm = $(e.currentTarget);
          $("article.region").removeClass("selected").addClass("unselected");
          $elm.removeClass("unselected").addClass("selected");
          $("section#mainland").animate({
            top: 85 - $elm.position().top
          });
          return _this.resize_articles();
        };
      })(this));
      return $(document).keydown((function(_this) {
        return function(e) {
          if (e.keyCode === 40) {
            return $("article.region.selected").next().trigger("click");
          } else if (e.keyCode === 38) {
            return $("article.region.selected").prev().trigger("click");
          }
        };
      })(this));
    };

    CarouselBlog.prototype.init_article_keyframes = function() {
      return $.each($("article.region"), (function(_this) {
        return function(i, elm) {
          var end_value;
          end_value = 1 - Math.abs(10 * i) / 100;
          return _this.create_keyframe("scale_" + i, "scale", "0", "" + end_value);
        };
      })(this));
    };

    CarouselBlog.prototype.resize_articles = function() {
      var current_region;
      current_region = $("article.region.selected").data("index");
      return $.each($("article.region"), (function(_this) {
        return function(i, elm) {
          var keyframe, matches, matrixRegex, new_transform, translate_x, translate_y;
          new_transform = 1 - Math.abs(10 * (i - current_region)) / 100;
          matrixRegex = /matrix\((-?\d*\.?\d+),\s*0,\s*0,\s*(-?\d*\.?\d+),\s*0,\s*0\)/;
          matches = $(elm).css("-webkit-transform").match(matrixRegex);
          translate_x = matches[1];
          translate_y = matches[2];
          keyframe = "scale_" + i;
          _this.update_keyframe("" + keyframe, "scale", "" + translate_x + "," + 1, "" + new_transform + "," + 1);
          $(elm).attr("style", "-webkit-transform:scale(" + translate_x + "," + 1 + ")");
          return setTimeout(function() {
            return $(elm).css({
              "-webkit-animation": "" + keyframe + " 500ms"
            }).one("webkitAnimationEnd", function() {
              return $(elm).css("-webkit-transform", "scale(" + new_transform + "," + 1 + ")");
            });
          }, 100);
        };
      })(this));
    };

    CarouselBlog.prototype.create_keyframe = function(name, property, from, to) {
      var keyframes, sheet;
      sheet = document.styleSheets[0];
      keyframes = ("@-webkit-keyframes " + name + " {") + ("  0% {-webkit-transform: scale(" + from + ") }") + ("100% {-webkit-transform: scale(" + to + ") }") + "}";
      return sheet.insertRule(keyframes, 0);
    };

    CarouselBlog.prototype.find_keyframe = function(name) {
      var i, j, sheet, _i, _j, _ref, _ref1;
      sheet = document.styleSheets;
      for (i = _i = 0, _ref = document.styleSheets.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        sheet = document.styleSheets[i];
        for (j = _j = 0, _ref1 = sheet.cssRules.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; j = 0 <= _ref1 ? ++_j : --_j) {
          if (sheet.cssRules[j].type === window.CSSRule.WEBKIT_KEYFRAMES_RULE && sheet.cssRules[j].name === name) {
            return sheet.cssRules[j];
          }
        }
      }
      return null;
    };

    CarouselBlog.prototype.show_keyframes = function(name) {
      var i, j, sheet, _i, _ref, _results;
      sheet = document.styleSheets;
      _results = [];
      for (i = _i = 0, _ref = document.styleSheets.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        sheet = document.styleSheets[i];
        _results.push((function() {
          var _j, _ref1, _results1;
          _results1 = [];
          for (j = _j = 0, _ref1 = sheet.cssRules.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; j = 0 <= _ref1 ? ++_j : --_j) {
            if (sheet.cssRules[j].type === window.CSSRule.WEBKIT_KEYFRAMES_RULE) {
              _results1.push(console.log(sheet.cssRules[j]));
            } else {
              _results1.push(void 0);
            }
          }
          return _results1;
        })());
      }
      return _results;
    };

    CarouselBlog.prototype.update_keyframe = function(name, property, from, to) {
      var kf;
      kf = this.find_keyframe(name);
      kf.deleteRule("0%");
      kf.deleteRule("100%");
      kf.insertRule("0% {-webkit-transform: scale(" + from + ")}");
      return kf.insertRule("100% {-webkit-transform: scale(" + to + ")}");
    };

    return CarouselBlog;

  })();

  this.CarouselBlog = new CarouselBlog;

}).call(this);
